function hdl = square_plot(D,opt)

% D is m*n*p size dictionary
% opt is options
% opt.grey for greyscale
% opt.sparse plots nonzero elements

p = size(D,3);

k = ceil(sqrt(p));

if nargin == 0 ,
    opt = {};
end

if~isfield(opt,'newfig'),
    opt.newfig = 1;
end


if~isfield(opt,'sparse'),
    opt.sparse = 0;
    if ~isfield(opt,'grey'),
        opt.grey = 0;
    end
    if ~isfield(opt,'unifscale'),
        opt.unifscale = 0;
    end
end

if ~isfield(opt,'axis'),
    opt.axis = 1;
end

if ~isfield(opt,'colorbar'),
    opt.colorbar = 0;
end

if opt.newfig,
    figure;
else 
    figure(opt.fighandle

for i = 0:k-1
    for j = 1:k
        ind = i*k+j;
        if ind <= p,
            subplot(k,k,ind);
            if ~opt.axis
                axis off;
            end
            if ~opt.sparse
                if opt.unifscale,
                    m1 = max(vec(D));
                    m2 = min(vec(D));
                    image((D(:,:,ind)-m2)*64/(m1-m2));
                else
                    imagesc(D(:,:,ind));
                end
                if opt.grey
                   colormap(gray);
                end
                if opt.colorbar,
                    colorbar;
                end
            else
                spy(D(:,:,ind));
            end
        end
    end
end

hdl = gcf;
